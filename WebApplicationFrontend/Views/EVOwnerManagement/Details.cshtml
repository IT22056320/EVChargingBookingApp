@model WebApplicationFrontend.Services.EVOwnerDto
@{
    ViewData["Title"] = "EV Owner Details";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0">
                        <i class="fas fa-user text-primary me-2"></i>
                        EV Owner Details
                    </h1>
                    <p class="text-muted mb-0">@Model.FullName (@Model.NIC)</p>
                </div>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Index", "EVOwnerManagement")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                    @if (!Model.IsApproved)
                    {
                        <button type="button" class="btn btn-success" onclick="approveUser('@Model.NIC', '@Model.FullName')">
                            <i class="fas fa-check me-1"></i>Approve
                        </button>
                        <button type="button" class="btn btn-danger" onclick="rejectUser('@Model.NIC', '@Model.FullName')">
                            <i class="fas fa-times me-1"></i>Reject
                        </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-@(Model.IsActive ? "warning" : "success")" 
                                onclick="toggleStatus('@Model.NIC', '@Model.FullName', @Model.IsActive.ToString().ToLower())">
                            <i class="fas fa-@(Model.IsActive ? "pause" : "play") me-1"></i>
                            @(Model.IsActive ? "Deactivate" : "Activate")
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Alerts -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <!-- Profile Information -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-bottom-0">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-id-card text-primary me-2"></i>
                        Profile Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-semibold text-muted">NIC Number</label>
                            <div class="form-control-plaintext border rounded px-3 py-2 bg-light">
                                <strong>@Model.NIC</strong>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-semibold text-muted">Full Name</label>
                            <div class="form-control-plaintext border rounded px-3 py-2 bg-light">
                                @Model.FullName
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-semibold text-muted">Email Address</label>
                            <div class="form-control-plaintext border rounded px-3 py-2 bg-light">
                                <i class="fas fa-envelope text-muted me-2"></i>
                                <a href="mailto:@Model.Email">@Model.Email</a>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-semibold text-muted">Phone Number</label>
                            <div class="form-control-plaintext border rounded px-3 py-2 bg-light">
                                @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                                {
                                    <i class="fas fa-phone text-muted me-2"></i>
                                    <a href="tel:@Model.PhoneNumber">@Model.PhoneNumber</a>
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </div>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label fw-semibold text-muted">Address</label>
                            <div class="form-control-plaintext border rounded px-3 py-2 bg-light">
                                @if (!string.IsNullOrEmpty(Model.Address))
                                {
                                    <i class="fas fa-map-marker-alt text-muted me-2"></i>
                                    @Model.Address
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Status & Activity -->
        <div class="col-lg-4">
            <!-- Account Status -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-transparent border-bottom-0">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-shield-alt text-success me-2"></i>
                        Account Status
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="fw-semibold">Account Status:</span>
                        @if (Model.IsActive)
                        {
                            <span class="badge bg-success">
                                <i class="fas fa-check-circle me-1"></i>Active
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">
                                <i class="fas fa-pause-circle me-1"></i>Inactive
                            </span>
                        }
                    </div>
                    
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="fw-semibold">Approval Status:</span>
                        @if (Model.IsApproved)
                        {
                            <span class="badge bg-success">
                                <i class="fas fa-check me-1"></i>Approved
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-warning">
                                <i class="fas fa-clock me-1"></i>Pending
                            </span>
                        }
                    </div>

                    @if (Model.IsApproved && Model.ApprovedAt.HasValue)
                    {
                        <div class="border-top pt-3">
                            <small class="text-muted d-block">Approved On:</small>
                            <strong>@Model.ApprovedAt.Value.ToString("MMMM dd, yyyy 'at' HH:mm")</strong>
                            @if (!string.IsNullOrEmpty(Model.ApprovedBy))
                            {
                                <br><small class="text-muted">By: @Model.ApprovedBy</small>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Registration Info -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-bottom-0">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle text-info me-2"></i>
                        Registration Info
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <small class="text-muted d-block">Registered On:</small>
                        <strong>@Model.RegisteredAt.ToString("MMMM dd, yyyy 'at' HH:mm")</strong>
                        <br><small class="text-muted">@((DateTime.UtcNow - Model.RegisteredAt).Days) days ago</small>
                    </div>

                    @if (Model.LastLoginAt.HasValue)
                    {
                        <div class="mb-3">
                            <small class="text-muted d-block">Last Login:</small>
                            <strong>@Model.LastLoginAt.Value.ToString("MMMM dd, yyyy 'at' HH:mm")</strong>
                        </div>
                    }
                    else
                    {
                        <div class="mb-3">
                            <small class="text-muted d-block">Last Login:</small>
                            <span class="text-muted">Never logged in</span>
                        </div>
                    }

                    <div class="alert alert-info">
                        <i class="fas fa-mobile-alt me-2"></i>
                        <strong>Mobile App User</strong><br>
                        <small>This user registered via the mobile application.</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action History (Future Enhancement) -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-bottom-0">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-history text-warning me-2"></i>
                        Action History
                    </h5>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <div class="timeline-item">
                            <div class="timeline-marker bg-info"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Account Registered</h6>
                                <p class="text-muted mb-1">User registered via mobile application</p>
                                <small class="text-muted">@Model.RegisteredAt.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>
                        
                        @if (Model.IsApproved && Model.ApprovedAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Account Approved</h6>
                                    <p class="text-muted mb-1">Account approved by @(string.IsNullOrEmpty(Model.ApprovedBy) ? "System" : Model.ApprovedBy)</p>
                                    <small class="text-muted">@Model.ApprovedAt.Value.ToString("MMM dd, yyyy HH:mm")</small>
                                </div>
                            </div>
                        }

                        @if (Model.LastLoginAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-primary"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Last Login</h6>
                                    <p class="text-muted mb-1">User logged into mobile application</p>
                                    <small class="text-muted">@Model.LastLoginAt.Value.ToString("MMM dd, yyyy HH:mm")</small>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Action Forms (Hidden) -->
<form id="approveForm" method="post" style="display: none;">
    <input type="hidden" name="nic" id="approveNic" value="@Model.NIC">
</form>

<form id="rejectForm" method="post" style="display: none;">
    <input type="hidden" name="nic" id="rejectNic" value="@Model.NIC">
</form>

<form id="statusForm" method="post" style="display: none;">
    <input type="hidden" name="nic" id="statusNic" value="@Model.NIC">
    <input type="hidden" name="isActive" id="statusActive">
</form>

@section Scripts {
    <script>
        // Approve user
        function approveUser(nic, name) {
            if (confirm(`Are you sure you want to APPROVE ${name} (${nic})?\n\nThis will allow them to login to the mobile app.`)) {
                document.getElementById('approveForm').action = '@Url.Action("Approve", "EVOwnerManagement")';
                document.getElementById('approveForm').submit();
            }
        }

        // Reject user
        function rejectUser(nic, name) {
            if (confirm(`Are you sure you want to REJECT ${name} (${nic})?\n\nThis action cannot be undone.`)) {
                document.getElementById('rejectForm').action = '@Url.Action("Reject", "EVOwnerManagement")';
                document.getElementById('rejectForm').submit();
            }
        }

        // Toggle status
        function toggleStatus(nic, name, isActive) {
            const action = isActive ? 'DEACTIVATE' : 'ACTIVATE';
            const message = isActive ? 
                `Are you sure you want to DEACTIVATE ${name} (${nic})?\n\nThey will not be able to login until reactivated.` :
                `Are you sure you want to ACTIVATE ${name} (${nic})?\n\nThey will be able to login to the mobile app.`;
            
            if (confirm(message)) {
                document.getElementById('statusActive').value = !isActive;
                document.getElementById('statusForm').action = '@Url.Action("ToggleStatus", "EVOwnerManagement")';
                document.getElementById('statusForm').submit();
            }
        }
    </script>
}

<style>
    .timeline {
        position: relative;
        padding-left: 30px;
    }
    
    .timeline::before {
        content: '';
        position: absolute;
        left: 15px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #dee2e6;
    }
    
    .timeline-item {
        position: relative;
        margin-bottom: 20px;
    }
    
    .timeline-marker {
        position: absolute;
        left: -23px;
        top: 5px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid white;
    }
    
    .timeline-content {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        border-left: 3px solid #007bff;
    }
</style>